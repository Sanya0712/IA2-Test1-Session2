gdb a.out
GNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from a.out...done.
(gdb) b main
Breakpoint 1 at 0xaf9: file p8final.c, line 72.
(gdb) r
Starting program: /home/runner/IA2-Test1-Session2/a.out 
warning: Error disabling address space randomization: Operation not permitted

Breakpoint 1, main () at p8final.c:72
72  {
(gdb) n
73    int x = input_n();
(gdb) s
input_n () at p8final.c:11
11  {
(gdb) n
13    printf("Enter the number of triangles:\n");
(gdb) n
Enter the number of triangles:
14    scanf("%d", &n);
(gdb) n
2
15    return n;
(gdb) n
16  }
(gdb) n
main () at p8final.c:74
74    Triangle arr[x];
(gdb) n
75    input_n_triangles(x,arr);
(gdb) s
input_n_triangles (n=2, t=0x7ffe8c002fd0) at p8final.c:28
28    for (int i = 0; i < n; i++)
(gdb) n
30      t[i] = input_triangle();
(gdb) n
Enter the base, altitude of a triangle:
2 4
28    for (int i = 0; i < n; i++)
(gdb) n
30      t[i] = input_triangle();
(gdb) s
input_triangle () at p8final.c:19
19  {
(gdb) n
21    printf("Enter the base, altitude of a triangle:\n");
(gdb) n
Enter the base, altitude of a triangle:
22    scanf("%f%f", &a.base, &a.altitude);
(gdb) n
4 6
23    return a;
(gdb) n
24  }
(gdb) n
input_n_triangles (n=2, t=0x7ffe8c002fd0) at p8final.c:28
28    for (int i = 0; i < n; i++)
(gdb) n
32  }
(gdb) n
main () at p8final.c:76
76    find_areas_n(x,arr);
(gdb) s
find_areas_n (n=2, t=0x7ffe8c002fd0) at p8final.c:41
41    for (int i = 0; i < n; i++)
(gdb) n
43      find_area(&t[i]);
(gdb) s
find_area (t=0x7ffe8c002fd0) at p8final.c:36
36    t->area = 0.5 * t->base * t->altitude;
(gdb) n
37  }
(gdb) n
find_areas_n (n=2, t=0x7ffe8c002fd0) at p8final.c:41
41    for (int i = 0; i < n; i++)
(gdb) n
43      find_area(&t[i]);
(gdb) s
find_area (t=0x7ffe8c002fdc) at p8final.c:36
36    t->area = 0.5 * t->base * t->altitude;
(gdb) n
37  }
(gdb) n
find_areas_n (n=2, t=0x7ffe8c002fd0) at p8final.c:41
41    for (int i = 0; i < n; i++)
(gdb) n
45  }
(gdb) n
main () at p8final.c:77
77    Triangle small = find_smallest_triangle(x,arr);
(gdb) s
find_smallest_triangle (n=2, t=0x7ffe8c002fd0) at p8final.c:50
50    small = t[0];
(gdb) n
52    for (int i = 0; i < n; i++)
(gdb) n
54      if (small.area > t[i].area)
(gdb) n
52    for (int i = 0; i < n; i++)
(gdb) n
54      if (small.area > t[i].area)
(gdb) n
52    for (int i = 0; i < n; i++)
(gdb) n
59    return small;
(gdb) n
60  }
(gdb) n
main () at p8final.c:78
78    output(x,arr,small);
(gdb) s
output (n=2, t=0x7ffe8c002fd0, smallest=...) at p8final.c:64
64    for (int i = 0; i < n - 1; i++)
(gdb) n
66      printf("%f, %f and\n", t[i].base, t[i].altitude);
(gdb) n
2.000000, 4.000000 and
64    for (int i = 0; i < n - 1; i++)
(gdb) n
68    printf("%f, %f\nthe triangle with base = %f and altitude = %f having area = %f is the smallest\n", t[n-1].base, t[n-1].altitude, smallest.base, smallest.altitude, smallest.area);
(gdb) n
4.000000, 6.000000
the triangle with base = 2.000000 and altitude = 4.000000 having area = 4.000000 is the smallest
69  }
(gdb) n
main () at p8final.c:79
79    return 0;
(gdb) n
80  }(gdb) q
A debugging session is active.

    Inferior 1 [process 115] will be killed.

Quit anyway? (y or n) y
îº§ 